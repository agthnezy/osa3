{"version":3,"sources":["services/persons.js","components/Contacts.js","components/AddPerson.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","res","data","newPerson","post","id","put","delete","Contacts","contacts","handleDelete","map","contact","name","number","onClick","AddPerson","props","onSubmit","addName","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","filterContacts","Notification","message","console","log","style","color","borderStyle","borderRadius","font","padding","margin","App","useState","setContacts","setNewName","setNewNumber","filteredContacts","setFilteredContacts","setMessage","messageType","setMessageType","getAllContacts","contactService","initialContacts","catch","error","notify","action","setTimeout","useEffect","event","filter","target","toUpperCase","indexOf","preventDefault","lastId","length","find","undefined","window","confirm","returnedContact","arr","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7df91ae5.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then(res => res.data)\n}\n\nconst create = (newPerson) => {\n  const req = axios.post(baseUrl, newPerson)\n  return req.then(res => res.data)\n}\n\nconst update = (id, newPerson) => {\n  const req = axios.put(`${baseUrl}/${id}`, newPerson)\n  return req.then(res => res.data)\n}\n\nconst remove = (id) => {\n  const req = axios.delete(`${baseUrl}/${id}`)\n  return req.then(res => res.data)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\n\nconst Contacts = ({ contacts, handleDelete }) => {\n  return (\n    <div>\n      {contacts.map((contact) => {\n        return (\n          <p key={contact.name}>\n            {contact.name} {contact.number}  <button\n              onClick={\n                () => handleDelete(\n                  contact.id,\n                  contact.name)}>\n              Delete\n            </button>\n\n          </p>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Contacts","import React from 'react'\n\nconst AddPerson = (props) => {\n    return (\n      <div>\n        <form onSubmit={props.addName}>\n          <div>\n            name: <input value={props.newName} onChange={props.handleNameChange} />\n          </div>\n          <div>\n            number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n      </div>\n  \n    )\n  }\n\n  export default AddPerson","import React from 'react'\n\nconst Filter = ({ filterContacts }) => {\n    return (\n      <div>\n        filter shown with <input onChange={filterContacts} />\n      </div>\n    )\n  }\n  \n  export default Filter","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n    const successStyle = {\n      color: 'green',\n      borderStyle: 'solid',\n      borderRadius: 5,\n      font: 25,\n      padding: 5,\n      margin: 5\n    }\n  \n    const errorStyle = {\n      color: 'red',\n      borderStyle: 'solid',\n      borderRadius: 5,\n      font: 25,\n      padding: 5,\n      margin: 5\n    }\n  \n    if (message === null) {\n      return null\n    } else if (type === 'error') {\n      console.log('Error!')\n      return (\n        <div style={errorStyle}>\n          {message}\n        </div>\n      )\n    } else {\n      return (\n        <div style={successStyle}>\n          {message}\n        </div>\n      )\n    }\n  }\n\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport contactService from './services/persons'\nimport Contacts from './components/Contacts'\nimport AddPerson from './components/AddPerson'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [contacts, setContacts] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filteredContacts, setFilteredContacts] = useState(contacts)\n  const [message, setMessage] = useState(null)\n  const [messageType, setMessageType] = useState()\n\n  const getAllContacts = () => {\n    contactService\n      .getAll()\n      .then(initialContacts => {\n        setContacts(initialContacts)\n        setFilteredContacts(initialContacts)\n        setNewName('')\n        setNewNumber('')\n      }).catch(error => {\n        setMessageType('error')\n        setMessage('Error: couldn\\'t retrieve phonenbook', error)\n      })\n  }\n\n  const notify = (type, action, name) => {\n    if (type === 'success') {\n      setMessageType('success')\n      switch (action) {\n        case 'add':\n          setMessage(`Added ${name}`)\n          break;\n        case 'update':\n          setMessage(`Updated ${name}'s number`)\n          break;\n        case 'delete':\n          setMessage(`Deleted ${name}`)\n          break;\n        default:\n      }\n    } else {\n      setMessageType('error')\n      setMessage(`Error: ${name} has already been deleted from server`)\n    }\n    setTimeout(() => {\n      setMessage(null)\n      setMessageType(null)\n    }, 5000)\n  }\n\n  useEffect(() => {\n    getAllContacts()\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const lastId = contacts[contacts.length - 1].id\n    const contact = contacts.find(contact => contact.name === newName)\n\n\n    if (contact !== undefined) {\n      // update\n      if (window.confirm(`Contact ${newName} exists already,\n       replace the old number with a new one?`)) {\n        contactService\n          .update(contact.id, { name: newName, number: newNumber, id: contact.id })\n          .then(() => {\n            getAllContacts()\n            setNewName('')\n            setNewNumber('')\n            notify('success', 'update', newName)\n          })\n          .catch(error => {\n            notify('error', 'update', newName)\n            getAllContacts()\n          })\n      }\n    } else {\n      // add new\n      contactService\n        .create({ name: newName, number: newNumber, id: lastId + 1 })\n        .then(returnedContact => {\n          const arr = contacts.concat(returnedContact)\n          setContacts(arr)\n          setFilteredContacts(arr)\n          setNewName('')\n          setNewNumber('')\n          notify('success', 'add', newName)\n        })\n        .catch(error => {\n          notify('error', 'add', newName)\n          getAllContacts()\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const filterChange = (filter) => {\n    setFilteredContacts(contacts.filter(contact => contact.name.toUpperCase()\n      .indexOf(filter.toUpperCase()) > -1))\n  }\n\n  const filterContacts = (event) => {\n    filterChange(event.target.value)\n  }\n\n  const handleDelete = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      contactService\n        .remove(id)\n        .then(() => {\n          contactService\n            .getAll()\n            .then(contacts => {\n              const arr = contacts\n              setContacts(arr)\n              setFilteredContacts(arr)\n              notify('success', 'delete', name)\n            })\n        })\n        .catch(error => {\n          notify('error', 'delete', name)\n          getAllContacts()\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} type={messageType} />\n      <Filter filterContacts={filterContacts} />\n      <h2>Add a new contact</h2>\n      <AddPerson\n        addName={addName}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange} />\n      <h2>Contacts</h2>\n      <Contacts contacts={filteredContacts} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}